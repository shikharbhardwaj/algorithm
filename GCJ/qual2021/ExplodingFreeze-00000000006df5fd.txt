#include <bits/stdc++.h>
#define int long long
using pii=std::pair<int,int>;
using namespace std;

const int maxn = 105;

int t, n, c, l[maxn];
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> t;
    for(int cases = 0; cases < t; cases++)
    {
        cin >> n >> c;
        int origc = c;
        int bestcan = (n * (n + 1)) / 2 - 1;
        if(bestcan < c || c < n - 1)
        {
            cout << "Case #" << (cases + 1) << ": IMPOSSIBLE\n";
            continue;
        }
        for(int i = 0; i < n; i++)
            l[i] = n - 1;
        c -= n - 1;
        vector<int> need;
        for(int i = 0; i < n - 1; i ++)
        {
            int take = min(c, n - 1 - i);
            need.push_back(i + take);
            c -= take;
        }
        for(int i = n - 2; i >= 0; i--)
        {
            reverse(l + i, l + need[i] + 1);
            assert(l[need[i]] == n - 1);
            l[need[i]] = i;
        }
        cout << "Case #" << (cases + 1) << ": ";
        for(int i = 0; i < n; i++)
            cout << l[i] + 1 << " \n"[i == n - 1];
    }
    return 0;
}